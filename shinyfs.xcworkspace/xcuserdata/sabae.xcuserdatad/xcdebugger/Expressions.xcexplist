<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "ShinyPartitioner::partitionRegion(std::list&lt;unsigned long long, std::allocator&lt;unsigned long long&gt; &gt;*, std::list&lt;ShinyPeer*, std::allocator&lt;ShinyPeer*&gt; &gt;*):ShinyPartitioner.cpp">
         <PersistentStrings>
            <PersistentString
               value = "(*regionPeers)[*region_itty].size()">
            </PersistentString>
            <PersistentString
               value = "regionSizes[*region_itty]">
            </PersistentString>
            <PersistentString
               value = "regionSizes.size()">
            </PersistentString>
            <PersistentString
               value = "regionSizes">
            </PersistentString>
            <PersistentString
               value = "regionSizes">
            </PersistentString>
            <PersistentString
               value = "(*regionPeers)[*region_itty].size()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShinyFileChunk::ShinyFileChunk(ShinyMetaFile*, unsigned long long, int, unsigned char*):ShinyFileChunk.cpp">
         <PersistentStrings>
            <PersistentString
               value = "char hash[32]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "main:main.cpp">
         <PersistentStrings>
            <PersistentString
               value = "(char *)0x100500f60">
            </PersistentString>
            <PersistentString
               value = "0x100500f60">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShinyFileChunk::isAvailable():ShinyFileChunk.cpp">
      </ContextState>
      <ContextState
         contextName = "sendMessages(zmq::context_t&amp;, std::list&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;&amp;):main.cpp">
         <PersistentStrings>
            <PersistentString
               value = "((char *)&amp;addr[6])">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShinyNetwork::getPeer(char const*):ShinyNework.cpp">
         <PersistentStrings>
            <PersistentString
               value = "(int)errno">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShinyFileChunk::sanityCheck():ShinyFileChunk.cpp">
         <PersistentStrings>
            <PersistentString
               value = "this-&gt;hash">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShinyMetaFile::serialize(char*):ShinyMetaFile.cpp">
      </ContextState>
      <ContextState
         contextName = "ShinyFileChunk::read(unsigned int, char*, unsigned int):ShinyFileChunk.cpp">
      </ContextState>
      <ContextState
         contextName = "ShinyMetaFile::read(unsigned long long, char*, unsigned long long):ShinyMetaFile.cpp">
         <PersistentStrings>
            <PersistentString
               value = "chunks[0].dataLen">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShinyFileChunk::read(int, char*, int):ShinyFileChunk.cpp">
         <PersistentStrings>
            <PersistentString
               value = "buffer - 4">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShinyMetaFile::ShinyMetaFile(ShinyMetaFilesystem*, char const*, ShinyMetaDir*):ShinyMetaFile.cpp">
      </ContextState>
      <ContextState
         contextName = "zmq::socket_t::getsockopt(int, void*, unsigned long*):zmq.hpp">
         <PersistentStrings>
            <PersistentString
               value = "(int)errno">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
